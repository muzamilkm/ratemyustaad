name: 🛠 Build & Release Workflow

on:
  workflow_dispatch:
    inputs:
      build_type:
        description: "Build Type"
        required: true
        default: "3"
        type: choice
        options:
          - "Build and release APK"
          - "Build and release Web (deploys to web)"
          - "Build and release APK and Web (runs complete)"

permissions:
  contents: write # allow creating/updating Releases & uploading assets
  actions: read # allow pulling marketplace actions

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  buildAndReleaseAPK:
    name: 📦 Build & Release APK
    if: ${{ github.event.inputs.build_type == 'Build and release APK' || github.event.inputs.build_type == 'Build and release APK and Web (runs complete)' }}
    runs-on: ubuntu-latest

    steps:
      - name: 📂 Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Fetch all history for tags and versioning

      - name: 🚀 Cache pub deps
        uses: actions/cache@v3
        with:
          path: ~/.pub-cache
          key: ${{ runner.os }}-pub-${{ hashFiles('**/pubspec.yaml') }}
          restore-keys: ${{ runner.os }}-pub-

      - name: ☕️ Setup Java (Temurin 17)
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: "17"

      - name: 🦋 Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable

      - name: 📥 Get dependencies
        run: flutter pub get

      # - name: ✅ Run tests
      #   run: flutter test --coverage

      - name: 🏗️ Build APKs
        run: flutter build apk --release --split-per-abi

      - name: 📦 Prepare artifacts
        run: |
          mkdir -p artifacts
          cp build/app/outputs/flutter-apk/*.apk artifacts/

      - name: 🔢 Generate version number
        id: version
        run: |
          # Get date and time in YYYY.MM.DD-HHMMSS format
          TIMESTAMP=$(date +'%Y.%m.%d-%H%M%S')
          # Build the release string
          RELEASE_VERSION="v${TIMESTAMP}"
          echo "RELEASE_VERSION=${RELEASE_VERSION}" >> $GITHUB_ENV
          echo "version=${RELEASE_VERSION}" >> $GITHUB_OUTPUT

      - name: 🏷️ Create or update Release
        uses: ncipollo/release-action@v1.16.0
        with:
          tag: ${{ env.RELEASE_VERSION }}
          name: Release ${{ env.RELEASE_VERSION }}
          body: |
            Automated release build
            - Build number: ${{ env.RELEASE_VERSION }}
            - Commit: ${{ github.sha }}
          artifacts: artifacts/*.apk
          token: ${{ secrets.GITHUB_TOKEN }}
          allowUpdates: true

  buildAndReleaseWeb:
    name: 📦 Build & Release Web
    if: ${{ github.event.inputs.build_type == 'Build and release Web (deploys to web)' || github.event.inputs.build_type == 'Build and release APK and Web (runs complete)' }}
    runs-on: ubuntu-latest

    steps:
      - name: 📂 Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Fetch all history for tags and versioning

      - name: 🚀 Cache pub deps
        uses: actions/cache@v3
        with:
          path: ~/.pub-cache
          key: ${{ runner.os }}-pub-${{ hashFiles('**/pubspec.yaml') }}
          restore-keys: ${{ runner.os }}-pub-

      - name: 🦋 Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable

      - name: 📥 Get dependencies
        run: flutter pub get

      - name: 🏗️ Build web
        run: flutter build web

      - name: 📦 Upload web build artifact
        uses: actions/upload-artifact@v4
        with:
          name: web-build
          path: build/web
          retention-days: 1

  deployToFirebase:
    name: 📦 Deploy to Firebase Hosting
    needs: buildAndReleaseWeb
    if: ${{ github.event.inputs.build_type == 'Build and release Web (deploys to web)' || github.event.inputs.build_type == 'Build and release APK and Web (runs complete)' }}
    runs-on: ubuntu-latest
    steps:
      - name: 📂 Checkout code
        uses: actions/checkout@v4

      - name: 📥 Download web build
        uses: actions/download-artifact@v4
        with:
          name: web-build
          path: build/web

      - name: 📦 Deploy to Firebase Hosting
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: "${{ secrets.GITHUB_TOKEN }}"
          firebaseServiceAccount: "${{ secrets.FIREBASE_SERVICE_ACCOUNT_JSON }}"
          channelId: live
          projectId: rate-my-ustaad
        env:
          FIREBASE_CLI_PREVIEWS: hostingchannels
          FIREBASE_CLI_EXPERIMENTS: webframeworks
